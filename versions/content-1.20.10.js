/*
*
* @License ContentJS
*
* Copyright (c) Hasan HÃ¼seyin Demir.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
*/ 

let props={};content={async render(e,t,a){data=await content.dry.fetch(e),data=content.namer(data),test.ren(data,t,a,e),content.statistics.latestRendered={item:e,to:t,key:a}},namer(e){let t=e,a="/>",l="<",r=t.split(a).length-1,s=0;for(;r>s;){let i=t.search(a)-1,c=0,n="";for(;i-c>=-1;){if(t.charAt(i-c)==l){let o=(n=n.split("").reverse().join("")).split(" ")[0],p,d=`<${o} ${n.replace(o,"")||""}></${o}>`;t=t.slice(0,i-c)+d+t.slice(i+4,t.length),s++,i="",c=0,n=""}else n+=t.charAt(i-c);c++}}return t},rkg(){let e="";for(var t=0;t<=9;t++)e+=content.chars[Math.floor(24*Math.random())];return e},dry:{fetch:async e=>await (await fetch(e)).text(),replace:async(e,t)=>e=await (e=await e.replaceAll("__",t+"_")).replaceAll("$$",t),fetchAndReplace:async(e,t)=>data=await content.dry.replace(data=await content.dry.fetch(e),t),polated:(e,t)=>!0==e&&!0==t,dParser(e,t){let a=new DOMParser;(a=a.parseFromString(e,"text/html")).body.childNodes.forEach((e,a)=>{t.appendChild(e)})},props:{}},watch:[],scrlist:[],chars:"abcdefghijklmnoprstuxvyz_".split(""),statistics:{now:new Date,pageload(e){let t=new Date;switch(e){case"second":return Math.floor((t-content.statistics.now)/1e3);case"minute":return(t-content.statistics.now)/1e3/60;default:return t-content.statistics.now}},latestRendered:[]}},load={async script(file,key){await eval(data=await content.dry.fetchAndReplace(file,key))},scripts(e,t,a){e.map(e=>{load.script((t||"")+e,a)})},async style(e,t,a){data=await content.dry.fetchAndReplace(e,t),(style=document.createElement("style")).textContent=data,document.querySelector(a||"body").appendChild(style)},styles(e,t,a,l){e.map(e=>{load.style((t||"")+e,a,l)})}},test={ren(str,to,key,file){let indexe=document.querySelectorAll(to),attr="";indexe.forEach((i,index)=>{(proplist=i.getAttributeNames()).map(items=>{"key"==items&&(attr=i.getAttribute("key").replaceAll("'","").replaceAll('"',"")),eval(`props.${items}=${i.getAttribute(items)}`)});let keys=content.rkg(),specific=attr||key||keys;str=(str=str.replaceAll("$$",specific)).replaceAll("__",specific+"_"),to.includes("#")||to.includes(".")||(str=`<div id=${specific+"_"}>${str}</div>`),slot=document.querySelectorAll(to)[index].textContent,test.interp(str,to,index,specific,file),props={},slot=""})},interp(str,item,index,key,file){let first="{%",last="%}",starter=str.search(first),endPoint=str.search(last),isStarter=starter>-1,isEndPoint=endPoint>-1,isPolated;if(!1==(0,content.dry.polated)(isStarter,isEndPoint)){let element=document.querySelectorAll(item)[index];element.textContent="",str=str.replaceAll("{{","<span class='set' data='").replaceAll("}}","'> </span>"),content.dry.dParser(str,element),test.script(str,file,key,element)}else{let interp=str.slice(starter+first.length,endPoint),output,result=eval(interp),clean=str.slice(0,starter)+(result.length?result:"")+str.slice(endPoint+last.length);test.interp(clean,item,index,key,file)}},async script(str,file,key,element){let valid=!1,arrays=[file,key];if(content.scrlist.map(e=>{e.toString()===arrays.toString()&&(valid=!0)}),!valid){content.scrlist.push(arrays);let first="<script>",last="</script>",starter=str.search(first),endPoint=str.search(last),isStarter=starter>-1,isEndPoint=endPoint>-1,isPolated;if(!0==(0,content.dry.polated)(isStarter,isEndPoint)&&str){let interp;await eval(str.slice(starter+first.length,endPoint))}}test.customscript("defer",str,element)},async customscript(condition,str,element){let valid=!1,arr;if(document.querySelectorAll(condition).forEach(e=>{e.style.display="none"}),!valid){let first=`<${condition}>`,last=`</${condition}>`,starter=str.search(first),endPoint=str.search(last),isStarter=starter>-1,isEndPoint=endPoint>-1,isPolated;if(!0==(0,content.dry.polated)(isStarter,isEndPoint)&&str){let interp;await eval(str.slice(starter+first.length,endPoint))}}set()}},set=element=>{element?document.body.querySelectorAll(element).forEach(contentelem=>{contentelem.querySelectorAll(".set").forEach(contentelems=>{var data=contentelems.getAttribute("data"),inv=contentelems.getAttribute("invisible"),vis=contentelems.getAttribute("visible");data&&contentelems.innerHTML!=eval(data).toString()&&(contentelems.innerHTML=eval(data).toString()),inv&&(eval(inv)?contentelems.style.display="none":contentelems.style.display=""),vis&&(eval(vis)?contentelems.style.display="":contentelems.style.display="none")})}):document.body.querySelectorAll(".set").forEach(contentelem=>{var data=contentelem.getAttribute("data"),inv=contentelem.getAttribute("invisible"),vis=contentelem.getAttribute("visible");data&&contentelem.innerHTML!=eval(data).toString()&&(contentelem.innerHTML=eval(data).toString()),inv&&(eval(inv)?contentelem.style.display="none":contentelem.style.display=""),vis&&(eval(vis)?contentelem.style.display="":contentelem.style.display="none")}),w()};let dataSet={value:[],get(){dataSet.value.forEach(value=>{eval(`dataSet.${value}=window.${value}`)})},set(){dataSet.value.forEach(value=>{if(eval(`dataSet.${value}`)!==eval(`${value}`)){dataSet.get(),console.log("Changed\nvalue="+eval(value)),set();return}})}};class watch{constructor(value,func){this.watching=value,this.value=value.map(item=>eval(item)),this.func=func}get(){this.value=this.watching.map(item=>eval(item))}set(){var temp;this.watching.map(item=>eval(item)).join("")!==this.value.join("")&&(this.get(),this.func(),set())}}w=()=>{content.watch.forEach(e=>{e.set()}),dataSet.set()};
